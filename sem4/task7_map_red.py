"""üêÄ –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–∞ Python, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å
—Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –∏–∑ 1000000 —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª.
üêÄ –ü—Ä–∏–º–µ—Ä –º–∞—Å—Å–∏–≤–∞: arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, ...]
üêÄ –ú–∞—Å—Å–∏–≤ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω —Å–ª—É—á–∞–π–Ω—ã–º–∏ —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏
–æ—Ç 1 –¥–æ 100.
üêÄ –ü—Ä–∏ —Ä–µ—à–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å,
–º–Ω–æ–≥–æ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω–æ—Å—Ç—å –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å.
üêÄ –í –∫–∞–∂–¥–æ–º —Ä–µ—à–µ–Ω–∏–∏ –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
–≤—ã—á–∏—Å–ª–µ–Ω–∏–π."""

import json, time
from random import randint
from functools import reduce



# array_num = []
#
# def fill_aray(size):
#     for _ in range(size):
#         array_num.append(randint(1,100))
#     return array_num
#
# with open('array_data.json', 'w',encoding='utf-8') as f:
#     data ={}
#     data['arr'] = fill_aray(1000000)
#     json.dump(data, f)
#
# print(len(array_num))

arr_data = []
with open('array_data.json', 'r', encoding='utf-8') as f:
    d = json.load(f)
    arr_data = d['arr']
    print(f'sum elem = {sum(arr_data)}')


# print(arr[:10])


def chunkify(arr: list, number_of_chunks=20):
    step = len(arr) // number_of_chunks
    if step != 0:
        for i in range(0, len(arr), step):
            yield arr[i: i + step]
    else:
        yield arr


def chunks_mapper(chunk):

    return sum(chunk)


def reducer(p, c):
    return p + c


def main():
    start_time = time.time()
    data_chunks = chunkify(arr_data, number_of_chunks=20)
    mapped = map(chunks_mapper, data_chunks)
    reduced = reduce(reducer, mapped)

    print(reduced)
    print(f'Total time = {time.time() - start_time:.2f} seconds')


if __name__ == '__main__':
    main()
