"""üìå –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∑–∞–¥–∞—áy –ø—Ä–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
üìå –°–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç—É–¥–µ–Ω—Ç–∞—Ö –∏ –∏—Ö –æ—Ü–µ–Ω–∫–∞—Ö –≤
—É—á–µ–±–Ω–æ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏.
üìå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–≤–µ —Ç–∞–±–ª–∏—Ü—ã: "–°—Ç—É–¥–µ–Ω—Ç—ã" –∏ "–û—Ü–µ–Ω–∫–∏".
üìå –í —Ç–∞–±–ª–∏—Ü–µ "–°—Ç—É–¥–µ–Ω—Ç—ã" –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è: id, –∏–º—è, —Ñ–∞–º–∏–ª–∏—è, –≥—Ä—É–ø–ø–∞
–∏ email.
üìå –í —Ç–∞–±–ª–∏—Ü–µ "–û—Ü–µ–Ω–∫–∏" –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è: id, id —Å—Ç—É–¥–µ–Ω—Ç–∞, –Ω–∞–∑–≤–∞–Ω–∏–µ
–ø—Ä–µ–¥–º–µ—Ç–∞ –∏ –æ—Ü–µ–Ω–∫–∞.
üìå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å —Å–≤—è–∑—å –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏ "–°—Ç—É–¥–µ–Ω—Ç—ã" –∏ "–û—Ü–µ–Ω–∫–∏".
üìå –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö
—Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∏—Ö –æ—Ü–µ–Ω–æ–∫.
"""

from flask import Flask, render_template, jsonify
from models import db, Student, Grade
from random import randint
from faker import Faker

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///students_grades_db.db'

db.init_app(app)

fake = Faker('ru_RU')


@app.route('/')
def index():
    return 'Hi'


@app.cli.command("init-db")
def init_db():
    db.create_all()
    print('OK')


@app.cli.command("fill-db")
def fill_tables():
    count = 15

    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    for _ in range(1, count + 1):

        new_std = Student(
            first_name=fake.first_name(),
            last_name=fake.last_name(),
            group=randint(1001, 1022),
            email=fake.email()
        )
        db.session.add(new_std)
    db.session.commit()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ü–µ–Ω–∫–∏

    for _ in range(1, count * 4):
        new_grade = Grade(
            id_student=randint(1, count+1),
            discipline=fake.word(ext_word_list=['—Ñ–∏–∑–∏–∫–∞', '–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '—Ö–∏–º–∏—è', '–±–∏–æ–ª–æ–≥–∏—è', '–∏—Å—Ç–æ—Ä–∏—è', '—Ñ–∏–∑–∫—É–ª—å—Ç—É—Ä–∞']),
            grade=randint(2, 5)
        )

        db.session.add(new_grade)
    db.session.commit()


@app.route('/students/')
def get_std():
    students = Student.query.all()
    context = {'students': students}
    return render_template('students.html', **context)

@app.route('/grade/student/<int:id_student>/')
def get_grade_by_std(id_student):
    grades = Grade.query.filter_by(id_student=id_student).all()
    std = Student.query.filter_by(id=id_student).first()

    if grades:
        return jsonify(
            [{'–°—Ç—É–¥–µ–Ω—Ç ': std.last_name,'id': grade.id, '–ü—Ä–µ–¥–º–µ—Ç': grade.discipline, '–û—Ü–µ–Ω–∫–∞': grade.grade} for grade in
             grades])
    else:
        return jsonify({'error': 'Posts not found'})


if __name__ == '__main__':
    app.run(debug=True)
